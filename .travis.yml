os: linux
dist: bionic
language: c
compiler: gcc
git:
    submodules: false
cache:
  ccache: true
before_install:
    - |
      sudo apt-get install bcc bin86 libpci-dev libc6-dev libc6-dev-i386 linux-libc-dev zlib1g-dev libncurses5-dev patch libvncserver-dev libssl-dev libsdl-dev iasl libbz2-dev e2fslibs-dev uuid-dev ocaml libx11-dev bison flex ocaml-findlib xz-utils gettext libyajl-dev libpixman-1-dev libaio-dev libfdt-dev libglib2.0-dev autoconf automake libtool libjson-c-dev liblzma-dev autoconf-archive libsystemd-dev clang-10
      git submodule update --init libvmi xen
      cd xen
      ./configure --disable-pvshim
      make -j2 dist-xen
      make -j2 dist-tools
      sudo make -j2 install-xen
      sudo make -j2 install-tools
      echo "/usr/local/lib" | sudo tee -a /etc/ld.so.conf.d/xen.cfg
      sudo ldconfig
      cd ..
      cd libvmi
      autoreconf -vif
      ./configure --disable-kvm --disable-file --disable-bareflank --disable-safety-checks --disable-examples
      make
      sudo make install
      cd ..
      export PATH=/usr/lib/llvm-10/bin:$PATH
      export CC="ccache clang"
      export CXX="ccache clang++"
      export CPP="ccache clang-cpp"

jobs:
    include:

#
# Coverity
#
    - stage: cloudscan
      if: branch = master
      env:
        - TEST="Coverity"
      addons:
        coverity_scan:
            project:
                name: "$COVERITY_PROJECT_NAME"
                description: "Build submitted via Travis CI"
            notification_email: $COVERITY_NOTIFICATION_EMAIL
            build_command_prepend: "./autogen.sh; ./configure --enable-debug"
            build_command:   "make"
            branch_pattern: $COVERITY_BRANCH_PATTERN
      script:
        - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

#
# SonarCloud
#
    - if: branch = master
      env:
        - TEST="SonarCloud"
      addons:
        sonarcloud:
            organization: "drakvuf"
            token: "$SONAR_TOKEN"
      script:
        - 'if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then exit 0; fi'
        - ./autogen.sh
        - ./configure --enable-debug
        - build-wrapper-linux-x86-64 --out-dir bw-output make -j2
        - sonar-scanner
